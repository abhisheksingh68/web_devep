✍ Getting started with Laravel

✔ Laravel is most trending PHP framework in the market.
✔ Laravel is developed by - Taylor Otwell (2011)

✍ Why Laravel?

✔ Very very easy (Myth)
✔ Highly upgradable
✔ Highly scalable
✔ Open source and totally free
✔ Highly secure
✔ Large community on Github, laracast.com and stackoverflow

✍ Some other frameworks of PHP

✔ laravel
✔ codeIgnitor
✔ yii
✔ cakephp
✔ fuelphp
✔ phalcon
✔ zend
✔ symfony
✔ slimphp
✔ zwave
...


phpmailer ---> github repository ---> readme.md
carbon ---> Date and Time manage ---> readme.md

✍ Why frameworks?

✔Frameworks are collection of packages, classes, methods and in-built functionalities.

✍ How to install laravel?

✔ Make sure composer have installed.
open cmd and type :
composer -v 2.x

✍ Composer

✔ Composer is a dependency manager tool.
✔ Composer is used to install any new package and upgrade to any new package.
✔ All the packages are downloaded from packagist.org server.
✔ Composer is a type package manager tool.
✔ Composer is same as pip in python.
✔ Composer is same as npm in node.
✔ Composer is same as apt in linux.


Download link for composer - https://getcomposer.org/download/

✍ How to install Laravel?

1) Using laravel installer
✔ composer global require laravel/installer (first-time)
✔ laravel new <project-name> (any-time)

2) Using composer create-project command
✔ composer create-project --prefer-dist laravel/laravel <project-name> (any-time)

✍ How to run laravel application?

goto inside project-folder
1) artisan file : anonymous file
2) .env file : anonymous file

✔ php artisan serve (serve is a command line argument)

✔ artisan : command line argument tool for laravel.

✍ Laravel ( Brief Overview)

✔ Laravel strictly follows design pattern like other frameworks.
✔ All the 23 design patterns are implemented in laravel.
✔ That's why strong OOPS is must to know for getting started with laravel.

✔ Laravel uses MVC concept like other frameworks...

M : Model
✔ All the database related part and database query logic like database connection database query QueryBuilder everything comes under model.
✔ It is type of class (core file).
✔ Note : Eloquent is Query Builder of model component.

V : Views
✔ Views refers the template or HTML views like form, about us, contact us, etc.
✔ Views are responsible to handle the presentation part of web app or you can views are responsible for front-end.
✔ All the files related to front-end are related to views.
✔ Every views file in laravel is called blade (any-name.blade.php) file.
✔ It is type of hybrid file.

C : Controller
✔ It is also a type of class (core file).
✔ Controller is middle-man or intermediate component b/w model and views.

How it works?
✔ Any request coming from views it will send to controller and controller with then send to model to update the db.
✔ Similarly any changes in db will seen by model and send to the controller for render in the view.

✍ Directory (Folder) structure of laravel

1). Project Folder : Root folder
	
✔ It is complete package of laravel package.
✔ The name of  the project is actually a clone of project downloaded by composer from packagist.org with package name laravel/laravel the name of the folder depends when installed during installation via composer.
✔ This is the main folder.
✔ Everything you will find inside this only.

Folder structure of laravel inside project folder
***********************************************

1) app folder
✔ This is the main folder where entire application business logic is applied like all middleware(security), all service providers(RouteServiceProvide, SchemaServiceProvider), all controllers, all models, all exceptions, package path(kernal.php) all console commands are found here, the beauty of this folder each file in folder is core file and uses strict concept of oops and the fike made inside these folders will be class files only full of serveral namespaces.

✔ The request from public/index.php will be send to composer.json from where psr-4(PHP Standard Recommendation) will be acquired as app and will be send to bootstrap/app.php to bootstrap the application which is registered inside kernal.php and kernal.php will return the package path illuminate/framework/src path which will be used by vendor/autoload.php to handle any type of operation distributed according to the package.

1) folder : console
          |	file : kernal.php
          |	folder : Commands [php artisan make:command <command-name>]
	|      user-defined-class command files
	|      ...	
	|      ...	


✔ Commands folder : This is the folder that, contains all the files related o user defined console commands, which is generated by user by using,
php artisan make:command <command-name>

✔ Commands folder : It will contain all the important class file for the user-defined class now this user defined class can have a logic which may require, laravel inbuilt package, for any database operation like Eloquent for this you will need package path to vendor/Eloquent for this you will need package path to vendor/Eloquent so for sapi name = 'cli-server' who will provide package path here kernal.php will provide the path to vendor/autoload.php for, cli-server.

2) Exceptions

This folder contains any type of Exceptions which need to be handle at application level globally.
Handler.php : This is the particular file where we register, every type of exception need to be handle.

We can use try catch blocks if each logic is not already b/w try and catch block which is managed by laravel internally.

Tips - csrf : Cross Site Request Forgery

3) Http





















































